name: 'Tests'

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.mdx?'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: read

jobs:
  build:
    name: 'build (node: 20)'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build

  typescript:
    name: 'typescript'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: nrwl/nx-set-shas@v3
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build
      - name: TSC for packages
        run: yarn nx affected --target=test:ts --nx-ignore-cycles
      - name: TSC for back
        run: yarn nx affected --target=test:ts:back --nx-ignore-cycles
      - name: TSC for front
        run: yarn nx affected --target=test:ts:front --nx-ignore-cycles

  api_ce_sqlite:
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    needs: [changes, build, typescript, unit_back, unit_front]
    name: '[CE] API Integration (sqlite, client: ${{ matrix.sqlite_pkg }}, node: ${{ matrix.node }}, shard: ${{ matrix.shard }})'
    strategy:
      matrix:
        node: [18, 20]
        sqlite_pkg: ['better-sqlite3', 'sqlite3']
        shard: [1/5, 2/5, 3/5, 4/5, 5/5]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build
      - uses: ./.github/actions/run-api-tests
        env:
          SQLITE_PKG: ${{ matrix.sqlite_pkg }}
        with:
          dbOptions: '--dbclient=sqlite-legacy --dbfile=./tmp/data.db'
          jestOptions: '--shard=${{ matrix.shard }}'

  # EE
  api_ee_pg:
    runs-on: ubuntu-latest
    needs: [build, typescript]
    name: '[EE] API Integration (postgres, node: ${{ matrix.node }}, shard: ${{ matrix.shard }})'
    env:
      STRAPI_LICENSE: ${{ secrets.strapiLicense }}
    strategy:
      matrix:
        node: [18, 20]
        shard: [1/5, 2/5, 3/5, 4/5, 5/5]
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: strapi
          POSTGRES_PASSWORD: strapi
          POSTGRES_DB: strapi_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          -v /__w/.github/workflows/db/postgres:/docker-entrypoint-initdb.d
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build
      - uses: ./.github/actions/run-api-tests
        with:
          dbOptions: '--dbclient=postgres --dbhost=localhost --dbport=5432 --dbname=strapi_test --dbusername=strapi --dbpassword=strapi'
          runEE: true

  api_ee_sqlite:
    runs-on: ubuntu-latest
    needs: [build, typescript]
    name: '[EE] API Integration (sqlite, client: ${{ matrix.sqlite_pkg }}, node: ${{ matrix.node }}, shard: ${{ matrix.shard }})'
    env:
      STRAPI_LICENSE: ${{ secrets.strapiLicense }}
    strategy:
      matrix:
        node: [18, 20]
        sqlite_pkg: ['better-sqlite3', 'sqlite3']
        shard: [1/5, 2/5, 3/5, 4/5, 5/5]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - name: Monorepo build
        uses: ./.github/actions/run-build
      - uses: ./.github/actions/run-api-tests
        env:
          SQLITE_PKG: ${{ matrix.sqlite_pkg }}
        with:
          dbOptions: '--dbclient=sqlite --dbfile=./tmp/data.db'
          runEE: true
          jestOptions: '--shard=${{ matrix.shard }}'
