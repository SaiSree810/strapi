name: 'Tests'

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.mdx?'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: read

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/filters.yaml
  # lint:
  #   name: 'lint (node: ${{ matrix.node }})'
  #   needs: [changes]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node: [18]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #     - uses: nrwl/nx-set-shas@v3
  #     - name: Monorepo install
  #       uses: ./.github/actions/yarn-nm-install
  #     - name: Run build:ts
  #       run: yarn nx run-many --target=build:ts --nx-ignore-cycles --skip-nx-cache
  #     - name: Run lint
  #       run: yarn nx affected --target=lint --parallel --nx-ignore-cycles

  # build:
  #   name: 'build (node: ${{ matrix.node }})'
  #   needs: [changes]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node: [14, 16, 18]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #     - name: Monorepo install
  #       uses: ./.github/actions/yarn-nm-install
  #     - name: Build
  #       run: yarn build --projects=@strapi/admin,@strapi/helper-plugin

  api_ce_mysql:
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    needs: [changes]
    name: '[CE] API Integration (mysql:latest, client: ${{ matrix.db_client }}, node: ${{ matrix.node }})'
    strategy:
      matrix:
        node: [14, 16, 18]
        db_client: ['mysql2']
    services:
      mysql:
        image: bitnami/mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: strapi
          MYSQL_USER: strapi
          MYSQL_PASSWORD: strapi
          MYSQL_DATABASE: strapi_test
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          # Maps tcp port 5432 on service container to the host
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install
      - uses: ./.github/actions/run-api-tests
        with:
          dbOptions: '--dbclient=${{ matrix.db_client }} --dbhost=localhost --dbport=3306 --dbname=strapi_test --dbusername=strapi --dbpassword=strapi'
